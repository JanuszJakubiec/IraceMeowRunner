## Template for parameter description file for Iterated Race.
##
## The format is one parameter per line. Each line contains:
##
## 1: Name of the parameter. An unquoted alphanumeric string,
##    example: ants

## 2: Switch to pass the parameter. A quoted (possibly empty) string,
##    if the value and the switch must be separated, add a space at
##    the end of the string. Example : "--version1 --ants "

## 3: Type. An unquoted single letter, among
##     i: Integer, c: categorical, o: ordinal, r: real.

## 4: For c and o: All possible values, that is, a variable number of
##    quoted or unquoted strings separated by commas within
##    parenthesis. Empty strings and strings containing commas or
##    spaces must be quoted.
##    For i,r: a pair of unquoted numbers representing minimum and
##    maximum values.

## 5: A conditional parameter can be defined according to the values of
##    one or several other parameters.  This is done by adding a
##    character '|' followed by an R expression involving the names of
##    other parameters. This expression must return TRUE if the
##    condition is satisfied, FALSE otherwise.

# 1:                       2:                              3: 4:                                        5:
problem                    "--problem="                    c  (backpack)
half_population_size       "--half_population_size="       i  (50, 51)
number_of_evaluations      "--number_of_evaluations="      c  (1000)
populations_number         "--populations="                i  (1, 10)
migrate_animals            "--migrate_animals="            c  (true, false)                             | populations_number > 1
emigration_interval        "--interval="                   i  (1, 10)                                   | migrate_animals == "true"
emigration_topology        "--topology="                   c  (ring,mesh2d,mesh3d,fully_connected,star) | migrate_animals == "true"
emigration_size            "--emigration_size="            i  (1, 8)                                    | migrate_animals == "true"
emigration_selection       "--emigration_selection="       c  (tournament, natural,roulette,sus)        | migrate_animals == "true"
imigration_selection       "--imigration_selection="       c  (tournament, natural,roulette,sus)        | migrate_animals == "true"
preserve_best_genes        "--preserve_best_genes="        c  (true, false)
mutation_genomes_selection "--mutation_genomes_selection=" c  (tournament,natural,roulette,sus)
crossover_params           "--crossover="                  c  (uniform,multi_point)
crossover_probability      "--crossover_probability="      r  (0, 0.9)                                  | crossover_params == "uniform"
crossover_points           "--points="                     i  (1, 5)                                    | crossover_params == "multi_point"
mutation                   "--mutation="                   c  (bit_flip)
mutation_probability       "--mutation_probability="       r  (0, 0.01)
fittest_survival           "--fittest_survival="           i  (1, half_population_size-1)               | preserve_best_genes == "true"
fittest_genomes_selection  "--fittest_genomes_selection="  c  (tournament, natural,roulette,sus)        | preserve_best_genes == "true"
